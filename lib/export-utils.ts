// Utility functions for exporting results in different formats

export function exportToPDF(title: string, content: string, metadata: Record<string, any>) {
  // In production, this would use a library like jsPDF
  const pdfContent = `
${title}
${"=".repeat(title.length)}

${content}

Metadata:
${Object.entries(metadata)
  .map(([key, value]) => `${key}: ${value}`)
  .join("\n")}

Generated by AI Speech Assistant Platform
Date: ${new Date().toLocaleString()}
  `.trim()

  const blob = new Blob([pdfContent], { type: "application/pdf" })
  const url = URL.createObjectURL(blob)
  const a = document.createElement("a")
  a.href = url
  a.download = `${sanitizeFilename(title)}.pdf`
  document.body.appendChild(a)
  a.click()
  document.body.removeChild(a)
  URL.revokeObjectURL(url)
}

export function exportToWord(title: string, content: string, metadata: Record<string, any>) {
  // In production, this would use a library like docx
  const docContent = `
${title}
${"=".repeat(title.length)}

${content}

Metadata:
${Object.entries(metadata)
  .map(([key, value]) => `${key}: ${value}`)
  .join("\n")}

Generated by AI Speech Assistant Platform
Date: ${new Date().toLocaleString()}
  `.trim()

  const blob = new Blob([docContent], {
    type: "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
  })
  const url = URL.createObjectURL(blob)
  const a = document.createElement("a")
  a.href = url
  a.download = `${sanitizeFilename(title)}.docx`
  document.body.appendChild(a)
  a.click()
  document.body.removeChild(a)
  URL.revokeObjectURL(url)
}

export function exportToText(title: string, content: string, metadata: Record<string, any>) {
  const textContent = `
${title}
${"=".repeat(title.length)}

${content}

Metadata:
${Object.entries(metadata)
  .map(([key, value]) => `${key}: ${value}`)
  .join("\n")}

Generated by AI Speech Assistant Platform
Date: ${new Date().toLocaleString()}
  `.trim()

  const blob = new Blob([textContent], { type: "text/plain" })
  const url = URL.createObjectURL(blob)
  const a = document.createElement("a")
  a.href = url
  a.download = `${sanitizeFilename(title)}.txt`
  document.body.appendChild(a)
  a.click()
  document.body.removeChild(a)
  URL.revokeObjectURL(url)
}

export function exportToJSON(title: string, content: string, metadata: Record<string, any>) {
  const jsonData = {
    title,
    content,
    metadata,
    exportedAt: new Date().toISOString(),
    platform: "AI Speech Assistant",
  }

  const blob = new Blob([JSON.stringify(jsonData, null, 2)], { type: "application/json" })
  const url = URL.createObjectURL(blob)
  const a = document.createElement("a")
  a.href = url
  a.download = `${sanitizeFilename(title)}.json`
  document.body.appendChild(a)
  a.click()
  document.body.removeChild(a)
  URL.revokeObjectURL(url)
}

function sanitizeFilename(filename: string): string {
  return filename
    .replace(/[^a-z0-9]/gi, "_")
    .replace(/_+/g, "_")
    .toLowerCase()
    .substring(0, 50)
}
